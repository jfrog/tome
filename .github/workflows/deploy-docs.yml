name: Deploy Documentation

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string

jobs:
  deploy-docs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - name: Install dependencies
        run: pip install .[docs]
      - name: Configure Git user
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions@github.com"
      - name: Remove previous patch versions
        if: ${{ inputs.version != 'dev' }}
        run: |
          # if a 0.1.3 is released we want to remove 0.1.2 from docs and only have the latest patch
          MAJOR_MINOR=$(echo "${{ inputs.version }}" | cut -d. -f1,2)  # extract `X.Y` from `X.Y.Z`
          OLD_VERSIONS=$(mike list | grep "^$MAJOR_MINOR" | cut -d' ' -f1 || true)
          echo "OLD_VERSIONS: $OLD_VERSIONS"
          for OLD in $OLD_VERSIONS; do
            if [ "$OLD" != "${{ inputs.version }}" ]; then
              echo "Removing old patch version: $OLD"
              mike delete --push "$OLD"
            fi
          done
      - name: Deploy Documentation
        run: |
          if [ "${{ inputs.version }}" == "dev" ]; then
            mike deploy --push --update-aliases dev
          else
            mike deploy --push --update-aliases ${{ inputs.version }} latest
            mike set-default latest --push
          fi
